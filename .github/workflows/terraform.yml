name: Terraform AWS Setup

on:
  push:
    branches:
      - 'feature/bts-13-terraform' #Trigger workflow push on this branch
  workflow_dispatch:  # Still allow manuall triggers for Github Actions UI

jobs:
  terraform_validate:
    runs-on: ubuntu-latest
    name: Terraform Validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Validate
        run: terraform validate

  terraform_plan:
    runs-on: ubuntu-latest
    name: Terraform Plan
    needs: terraform_validate  # This job will only run after terraform_validate succeeds

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Plan
        run: terraform plan

  terraform_apply:
    runs-on: ubuntu-latest
    name: Terraform Apply
    needs: terraform_plan  # This job will only run after terraform_plan succeeds
    if: github.event_name == 'workflow_dispatch'  # Ensure it's manually triggered

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Apply
        run: terraform apply -auto-approve

  ssh_check:
    runs-on: ubuntu-latest
    name: Check Server via SSH
    needs: terraform_apply  # This job will only run after terraform_apply succeeds
    if: github.event_name == 'workflow_dispatch'  # Ensure it's manually triggered

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/mlops.pem
          chmod 600 ~/.ssh/mlops.pem  # Secure the private key

      - name: SSH into EC2 instance to verify
        run: |
          echo "Attempting to SSH into the EC2 instance"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/mlops.pem ec2-user@${{ steps.instance_output.outputs.public_ip }}
        env:
          PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}