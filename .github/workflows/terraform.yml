name: EC2 DVC Training via Terraform & SSH

on:
  push:
    branches:
      - 'feature/bts-13-terraform'
  workflow_dispatch:

jobs:
  terraform_validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Validate
        run: |
          cd terraform
          terraform init -input=false
          terraform validate

  terraform_plan:
    runs-on: ubuntu-latest
    needs: terraform_validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Plan
        run: |
          cd terraform
          terraform init -input=false
          terraform plan

  terraform_apply:
    runs-on: ubuntu-latest
    needs: terraform_plan
   

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Apply
        run: |
          cd terraform
          terraform init -input=false
          terraform apply -auto-approve
        
        outputs:
        ec2_ip: ${{ steps.get_ip.outputs.ec2_ip }}

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          echo "Getting output..."
          ip=$(terraform output -raw ec2_public_ip)
          echo "EC2 Public IP is: $ip"
          echo "ec2_ip=$ip" >> "$GITHUB_OUTPUT"

  remote_train:
    runs-on: ubuntu-latest
    needs: terraform_apply
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug IP Address
        run: |
            echo "Connecting to EC2 at IP: ${{ needs.terraform_apply.outputs.ec2_ip }}"

      - name: SSH into EC2 and Run Training Script
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ needs.terraform_apply.outputs.ec2_ip }} <<EOF
            echo "Connected to EC2"
        #uses: appleboy/ssh-action@v1.0.0
        #with:
        #  host: ${{ needs.terraform_apply.outputs.ec2_ip }}
        # username: ubuntu
        # key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
        