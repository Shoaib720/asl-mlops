name: EC2 DVC Training via Terraform & SSH

on:
  push:
    branches:
      - 'feature/bts-13-terraform'
  workflow_dispatch:

jobs:
  terraform_deployment:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.get_ip.outputs.ec2_ip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.12.2'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # - name: Terraform Init & Validate
      #   run: |
      #     cd terraform
      #     terraform init -input=false
      #     terraform validate
      
      # - name: Terraform Plan & Apply
      #   run: |
      #     cd terraform
      #     terraform init -input=false
      #     terraform apply -auto-approve
          
      - name: Get EC2 Public IP
        id: get_ip
        run: |
          cd terraform
          terraform init -input=false
          ip=$(terraform output -raw ec2_public_ip)
          echo "Public IP: $ip"
          echo "ec2_ip=$ip" >> "$GITHUB_OUTPUT"
    
  # remote_train:
  #   runs-on: ubuntu-latest
  #   needs: terraform_deployment
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: SSH into EC2 and Run Training Script
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ needs.terraform_deployment.outputs.ec2_ip }}
  #         username: ubuntu
  #         key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
  #         run: |
  #           echo "Public IP: ${{ needs.terraform_deployment.outputs.ec2_ip }}"
  #         script: |
  #           echo "âœ… Connected to EC2"
  #           sudo apt update -y && sudo apt upgrade -y
