name: EC2 DVC Training via Terraform & SSH

on:
  push:
    branches:
      - 'feature/bts-13-terraform'
  workflow_dispatch:

jobs:
  terraform_deployment:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.read_ip.outputs.ec2_ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init & Validate
        run: |
          cd terraform
          terraform init -input=false
          terraform validate

      - name: Terraform Plan & Apply
        run: |
          cd terraform
          terraform init -input=false
          terraform apply -auto-approve
      
      - name: Read EC2 Public IP from File
        id: read_ip
        run: |
          ec2_ip=$(cat terraform/ec2_public_ip.txt)
          echo "EC2 Public IP: $ec2_ip"
          echo "ec2_ip=$ec2_ip" >> "$GITHUB_OUTPUT"

  remote_train:
    runs-on: ubuntu-latest
    needs: terraform_deployment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-keyscan ${{ needs.terraform_deployment.outputs.ec2_ip }} >> ~/.ssh/known_hosts

          # Add verbosity to SSH for debugging
          ssh -v -i ~/.ssh/id_rsa ubuntu@${{ needs.terraform_deployment.outputs.ec2_ip }} "echo 'SSH Connection Successful'"
  
      - name: SSH into EC2 and Run Training Script
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ needs.terraform_deployment.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
          script: |
            echo "Connected to EC2"
            sudo apt update -y && sudo apt upgrade -y
            sudo apt install -y python3 python3-pip git
  
            git clone git@github.com:Shoaib720/asl-mlops.git
            cd asl-mlops
            git checkout feature/bts-13-terraform
  
            pip3 install virtualenv
            virtualenv .venv
            source .venv/bin/activate
  
            pip install -r requirements.txt
            pip install dvc[s3]
  
            dvc pull
            dvc repro
            dvc push
   
